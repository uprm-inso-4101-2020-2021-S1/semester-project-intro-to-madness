{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geno_\\\\Documents\\\\VS Code Projects\\\\ITM Collector's Wiki\\\\semester-project-intro-to-madness\\\\src\\\\Component\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Search.css';\nimport Example from '../Images/Example.PNG';\n\nfunction Search() {\n  // This gets all the threads from the storage.\n  const [threads, setThreads] = useState([{}]);\n  useEffect(() => {\n    fetch('/threads').then(response => response.json()).then(data => setThreads(data.Thread));\n  }, []);\n\n  const updateThreads = category => {\n    fetch('/threads/' + category).then(response => response.json()).then(data => setThreads(data.Thread));\n  }; // This gets all the users from the storage.\n  // const [users, setUsers] = useState([{}]);\n  // useEffect(()=> {\n  //     fetch('/users').then(\n  //     response => response.json()\n  //     ).then(data => setUsers(data.User))\n  // }, []);\n\n\n  const sorts = [\"Purus Institute\", \"Ac Ipsum Associates\", \"Faucibus Company\", \"Phasellus LLP\", \"Aenean Corp.\"];\n  const [sorting, setSorting] = useState(sorts[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Sorting by: \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }\n  }, sorting))), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      marginLeft: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 49\n    }\n  }, sorts.map(sort => /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSorting(sort) & updateThreads(sort),\n    className: \"Sorting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, sort))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"threads-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, threads.map(thread => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"threads-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Example,\n    className: \"threadImage\",\n    alt: \"Filler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 38\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"(Item Name)\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"On: \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, thread.Date))))))));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/geno_/Documents/VS Code Projects/ITM Collector's Wiki/semester-project-intro-to-madness/src/Component/Search.js"],"names":["React","useState","useEffect","Link","Example","Search","threads","setThreads","fetch","then","response","json","data","Thread","updateThreads","category","sorts","sorting","setSorting","marginLeft","map","sort","thread","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,MAAT,GAAkB;AAEd;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAEEF,IAFF,CAEOG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACC,MAAN,CAFzB;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,aAAa,GAAIC,QAAD,IAAc;AAChCP,IAAAA,KAAK,CAAC,cAAcO,QAAf,CAAL,CAA8BN,IAA9B,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEMF,IAFN,CAEWG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACC,MAAN,CAF7B;AAGH,GAJD,CAVc,CAgBd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,KAAK,GAAG,CAAC,iBAAD,EAAoB,qBAApB,EAA2C,kBAA3C,EAA+D,eAA/D,EAAgF,cAAhF,CAAd;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACe,KAAK,CAAC,CAAD,CAAN,CAAtC;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAAlB,CAAJ,CADJ,eAII;AAAO,IAAA,KAAK,EAAE;AAACE,MAAAA,UAAU,EAAC;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/BH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAQ,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACG,IAAD,CAAV,GAAmBP,aAAa,CAACO,IAAD,CAAvD;AAA+D,IAAA,SAAS,EAAC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFA,IAApF,CAAJ,CADH,CAD+B,CAApC,CAJJ,eAWI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECf,OAAO,CAACc,GAAR,CAAaE,MAAD,iBAET;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiB;AAAK,IAAA,GAAG,EAAElB,OAAV;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,GAAG,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,CAAJ,CADiC,eAEjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CAAJ,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIkB,MAAM,CAACC,IAAX,CAAR,CAFA,CAFiC,CAAjC,CAFH,CAFD,CAXJ,CADJ;AA2BH;;AAED,eAAelB,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Search.css';\r\nimport Example from '../Images/Example.PNG';\r\n\r\nfunction Search() {\r\n\r\n    // This gets all the threads from the storage.\r\n    const [threads, setThreads] = useState([{}]);\r\n    useEffect(()=> {\r\n        fetch('/threads').then(\r\n        response => response.json()\r\n        ).then(data => setThreads(data.Thread))\r\n    }, []);\r\n\r\n    const updateThreads = (category) => {\r\n        fetch('/threads/' + category).then(\r\n            response => response.json()\r\n            ).then(data => setThreads(data.Thread))\r\n    }\r\n    \r\n    // This gets all the users from the storage.\r\n    // const [users, setUsers] = useState([{}]);\r\n    // useEffect(()=> {\r\n    //     fetch('/users').then(\r\n    //     response => response.json()\r\n    //     ).then(data => setUsers(data.User))\r\n    // }, []);\r\n\r\n    const sorts = [\"Purus Institute\", \"Ac Ipsum Associates\", \"Faucibus Company\", \"Phasellus LLP\", \"Aenean Corp.\"];\r\n    const [sorting, setSorting] = useState(sorts[0]);\r\n\r\n\r\n    return (\r\n        <div className=\"Search\">\r\n            <h1><span>Sorting by: <i>{sorting}</i></span></h1>\r\n\r\n            {/* This part sets the buttons that change the sorting method. */}\r\n            <table style={{marginLeft:\"200px\"}}><tr>\r\n                {sorts.map((sort) => (\r\n                    <th><button onClick={() => setSorting(sort) & updateThreads(sort)} className=\"Sorting\">{sort}</button></th>\r\n                ))}\r\n            </tr></table>\r\n\r\n                    {/* The search results. */}\r\n            <div className='threads-div'>\r\n\r\n            {threads.map((thread) => (\r\n\r\n                <table className='threads-table'><tr>\r\n                <th><Link to='/item'><img src={Example} className=\"threadImage\" alt=\"Filler\"/></Link></th>\r\n                <th><h2><b>(Item Name)</b></h2>\r\n                {/* <h2>By: <i>{users[1].username}</i></h2> */}\r\n                <h2>On: <i>{thread.Date}</i></h2></th>\r\n                </tr></table>\r\n            ))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}